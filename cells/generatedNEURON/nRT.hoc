
//  ******************************************************
//
//     File generated by: neuroConstruct v1.7.1
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate nRT

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target

public reference, type, description, name
strdef reference, type, description, name

public toString, netInfo

public all

objref synlist
objref all
objref stringFuncs

public ModelViewParmSubset_4
objref ModelViewParmSubset_4
public OneSecGrp_SectionRef_1
objref OneSecGrp_SectionRef_1
public soma_group
objref soma_group
public soma_dends
objref soma_dends
public ModelViewParmSubset_6
objref ModelViewParmSubset_6
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group
public ModelViewParmSubset_3
objref ModelViewParmSubset_3
public proximal_dends
objref proximal_dends
public ModelViewParmSubset_5
objref ModelViewParmSubset_5
public distal_axon
objref distal_axon

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    //reference = $s1
    //type = $s2
    //description = $s3

    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }

    sprint(name, "%s", type)
}

create comp_1
public comp_1
create comp_54
public comp_54
create comp_41
public comp_41
create comp_28
public comp_28
create comp_15
public comp_15
create comp_2
public comp_2
create comp_55
public comp_55
create comp_43
public comp_43
create comp_42
public comp_42
create comp_30
public comp_30
create comp_29
public comp_29
create comp_17
public comp_17
create comp_16
public comp_16
create comp_4
public comp_4
create comp_3
public comp_3
create comp_58
public comp_58
create comp_56
public comp_56
create comp_46
public comp_46
create comp_45
public comp_45
create comp_44
public comp_44
create comp_33
public comp_33
create comp_32
public comp_32
create comp_31
public comp_31
create comp_20
public comp_20
create comp_19
public comp_19
create comp_18
public comp_18
create comp_7
public comp_7
create comp_6
public comp_6
create comp_5
public comp_5
create comp_59
public comp_59
create comp_57
public comp_57
create comp_49
public comp_49
create comp_48
public comp_48
create comp_47
public comp_47
create comp_36
public comp_36
create comp_35
public comp_35
create comp_34
public comp_34
create comp_23
public comp_23
create comp_22
public comp_22
create comp_21
public comp_21
create comp_10
public comp_10
create comp_9
public comp_9
create comp_8
public comp_8
create comp_50
public comp_50
create comp_37
public comp_37
create comp_24
public comp_24
create comp_11
public comp_11
create comp_51
public comp_51
create comp_38
public comp_38
create comp_25
public comp_25
create comp_12
public comp_12
create comp_52
public comp_52
create comp_39
public comp_39
create comp_26
public comp_26
create comp_13
public comp_13
create comp_53
public comp_53
create comp_40
public comp_40
create comp_27
public comp_27
create comp_14
public comp_14

proc topol() {
    connect comp_54(0), comp_1(0.0)
    connect comp_41(0), comp_1(1.0)
    connect comp_28(0), comp_1(1.0)
    connect comp_15(0), comp_1(1.0)
    connect comp_2(0), comp_1(1.0)
    connect comp_55(0), comp_54(1.0)
    connect comp_43(0), comp_41(1.0)
    connect comp_42(0), comp_41(1.0)
    connect comp_30(0), comp_28(1.0)
    connect comp_29(0), comp_28(1.0)
    connect comp_17(0), comp_15(1.0)
    connect comp_16(0), comp_15(1.0)
    connect comp_4(0), comp_2(1.0)
    connect comp_3(0), comp_2(1.0)
    connect comp_58(0), comp_55(1.0)
    connect comp_56(0), comp_55(1.0)
    connect comp_46(0), comp_43(1.0)
    connect comp_45(0), comp_42(1.0)
    connect comp_44(0), comp_42(1.0)
    connect comp_33(0), comp_30(1.0)
    connect comp_32(0), comp_29(1.0)
    connect comp_31(0), comp_29(1.0)
    connect comp_20(0), comp_17(1.0)
    connect comp_19(0), comp_16(1.0)
    connect comp_18(0), comp_16(1.0)
    connect comp_7(0), comp_4(1.0)
    connect comp_6(0), comp_3(1.0)
    connect comp_5(0), comp_3(1.0)
    connect comp_59(0), comp_58(1.0)
    connect comp_57(0), comp_56(1.0)
    connect comp_49(0), comp_46(1.0)
    connect comp_48(0), comp_45(1.0)
    connect comp_47(0), comp_44(1.0)
    connect comp_36(0), comp_33(1.0)
    connect comp_35(0), comp_32(1.0)
    connect comp_34(0), comp_31(1.0)
    connect comp_23(0), comp_20(1.0)
    connect comp_22(0), comp_19(1.0)
    connect comp_21(0), comp_18(1.0)
    connect comp_10(0), comp_7(1.0)
    connect comp_9(0), comp_6(1.0)
    connect comp_8(0), comp_5(1.0)
    connect comp_50(0), comp_47(1.0)
    connect comp_37(0), comp_34(1.0)
    connect comp_24(0), comp_21(1.0)
    connect comp_11(0), comp_8(1.0)
    connect comp_51(0), comp_50(1.0)
    connect comp_38(0), comp_37(1.0)
    connect comp_25(0), comp_24(1.0)
    connect comp_12(0), comp_11(1.0)
    connect comp_52(0), comp_51(1.0)
    connect comp_39(0), comp_38(1.0)
    connect comp_26(0), comp_25(1.0)
    connect comp_13(0), comp_12(1.0)
    connect comp_53(0), comp_52(1.0)
    connect comp_40(0), comp_39(1.0)
    connect comp_27(0), comp_26(1.0)
    connect comp_14(0), comp_13(1.0)
    basic_shape()
}

proc basic_shape() {
basic_shape_extra_0()
basic_shape_extra_1()
}

proc basic_shape_extra_0(){
    comp_1 {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 18.68) pt3dadd(0.0, 15.0, 0.0, 18.68)}
    comp_1 {pt3dadd(-0.0, 30.0, 0.0, 18.68)}
    comp_54 {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 1.6) pt3dadd(-0.0, -25.0, 0.0, 1.6)}
    comp_54 {pt3dadd(-0.0, -50.0, 0.0, 1.6)}
    comp_41 {pt3dclear() pt3dadd(-0.0, 30.0, 0.0, 2.12) pt3dadd(0.0, 30.0, 37.5, 2.12)}
    comp_41 {pt3dadd(0.0, 30.0, 75.0, 2.12)}
    comp_28 {pt3dclear() pt3dadd(-0.0, 30.0, 0.0, 2.12) pt3dadd(0.0, 30.0, -37.5, 2.12)}
    comp_28 {pt3dadd(0.0, 30.0, -75.0, 2.12)}
    comp_15 {pt3dclear() pt3dadd(-0.0, 30.0, 0.0, 2.12) pt3dadd(37.5, 30.0, 0.0, 2.12)}
    comp_15 {pt3dadd(75.0, 30.0, 0.0, 2.12)}
    comp_2 {pt3dclear() pt3dadd(-0.0, 30.0, 0.0, 2.12) pt3dadd(-37.5, 30.0, 0.0, 2.12)}
    comp_2 {pt3dadd(-75.0, 30.0, -0.0, 2.12)}
    comp_55 {pt3dclear() pt3dadd(-0.0, -50.0, 0.0, 1.4) pt3dadd(-0.0, -75.0, 0.0, 1.4)}
    comp_55 {pt3dadd(-0.0, -100.0, 0.0, 1.4)}
    comp_43 {pt3dclear() pt3dadd(0.0, 30.0, 75.0, 1.33333) pt3dadd(14.60318, 30.0, 109.53969, 1.33333)}
    comp_43 {pt3dadd(29.20622, 30.0, 144.07996, 1.33333)}
    comp_42 {pt3dclear() pt3dadd(0.0, 30.0, 75.0, 1.33333) pt3dadd(-14.603344, 30.0, 109.54016, 1.33333)}
    comp_42 {pt3dadd(-29.206535, 30.0, 144.07996, 1.33333)}
    comp_30 {pt3dclear() pt3dadd(0.0, 30.0, -75.0, 1.33333) pt3dadd(-14.60318, 30.0, -109.53969, 1.33333)}
    comp_30 {pt3dadd(-29.206524, 30.0, -144.07953, 1.33333)}
    comp_29 {pt3dclear() pt3dadd(0.0, 30.0, -75.0, 1.33333) pt3dadd(14.603344, 30.0, -109.54016, 1.33333)}
    comp_29 {pt3dadd(29.20617, 30.0, -144.07953, 1.33333)}
    comp_17 {pt3dclear() pt3dadd(75.0, 30.0, 0.0, 1.33333) pt3dadd(109.54016, 30.0, -14.603348, 1.33333)}
    comp_17 {pt3dadd(144.07947, 30.0, -29.206345, 1.33333)}
    comp_16 {pt3dclear() pt3dadd(75.0, 30.0, 0.0, 1.33333) pt3dadd(109.53969, 30.0, 14.603172, 1.33333)}
    comp_16 {pt3dadd(144.07959, 30.0, 29.206419, 1.33333)}
    comp_4 {pt3dclear() pt3dadd(-75.0, 30.0, -0.0, 1.33333) pt3dadd(-109.54016, 30.0, 14.603348, 1.33333)}
    comp_4 {pt3dadd(-144.07996, 30.0, 29.206535, 1.33333)}
    comp_3 {pt3dclear() pt3dadd(-75.0, 30.0, -0.0, 1.33333) pt3dadd(-109.53969, 30.0, -14.603172, 1.33333)}
    comp_3 {pt3dadd(-144.07996, 30.0, -29.206215, 1.33333)}
    comp_58 {pt3dclear() pt3dadd(-0.0, -100.0, 0.0, 1.0) pt3dadd(-9.735475, -123.02701, 0.0, 1.0)}
    comp_58 {pt3dadd(-19.470892, -146.053, 0.0, 1.0)}
    comp_56 {pt3dclear() pt3dadd(-0.0, -100.0, 0.0, 1.0) pt3dadd(9.7354555, -123.02701, 0.0, 1.0)}
    comp_56 {pt3dadd(19.470907, -146.053, 0.0, 1.0)}
    comp_46 {pt3dclear() pt3dadd(29.20622, 30.0, 144.07996, 1.33333) pt3dadd(43.809635, 30.0, 178.6193, 1.33333)}
    comp_46 {pt3dadd(58.412754, 30.0, 213.1596, 1.33333)}
    comp_45 {pt3dclear() pt3dadd(-29.206535, 30.0, 144.07996, 0.837945) pt3dadd(-29.206217, 30.0, 181.57922, 0.837945)}
    comp_45 {pt3dadd(-29.206297, 30.0, 219.07944, 0.837945)}
    comp_44 {pt3dclear() pt3dadd(-29.206535, 30.0, 144.07996, 0.837945) pt3dadd(-56.107094, 30.0, 170.20572, 0.837945)}
    comp_44 {pt3dadd(-83.00803, 30.0, 196.33243, 0.837945)}
    comp_33 {pt3dclear() pt3dadd(-29.206524, 30.0, -144.07953, 1.33333) pt3dadd(-43.809944, 30.0, -178.61931, 1.33333)}
    comp_33 {pt3dadd(-58.41328, 30.0, -213.15915, 1.33333)}
    comp_32 {pt3dclear() pt3dadd(29.20617, 30.0, -144.07953, 0.837945) pt3dadd(29.206217, 30.0, -181.57922, 0.837945)}
    comp_32 {pt3dadd(29.2064, 30.0, -219.07906, 0.837945)}
    comp_31 {pt3dclear() pt3dadd(29.20617, 30.0, -144.07953, 0.837945) pt3dadd(56.107094, 30.0, -170.20572, 0.837945)}
    comp_31 {pt3dadd(83.008255, 30.0, -196.33209, 0.837945)}
    comp_20 {pt3dclear() pt3dadd(144.07947, 30.0, -29.206345, 1.33333) pt3dadd(178.61963, 30.0, -43.80969, 1.33333)}
    comp_20 {pt3dadd(213.15985, 30.0, -58.413044, 1.33333)}
    comp_19 {pt3dclear() pt3dadd(144.07959, 30.0, 29.206419, 0.837945) pt3dadd(181.57924, 30.0, 29.20652, 0.837945)}
    comp_19 {pt3dadd(219.07907, 30.0, 29.206625, 0.837945)}
    comp_18 {pt3dclear() pt3dadd(144.07959, 30.0, 29.206419, 0.837945) pt3dadd(170.20625, 30.0, 56.10762, 0.837945)}
    comp_18 {pt3dadd(196.33261, 30.001175, 83.00878, 0.837945)}
    comp_7 {pt3dclear() pt3dadd(-144.07996, 30.0, 29.206535, 1.33333) pt3dadd(-178.61974, 30.0, 43.809723, 1.33333)}
    comp_7 {pt3dadd(-213.15952, 30.0, 58.412918, 1.33333)}
    comp_6 {pt3dclear() pt3dadd(-144.07996, 30.0, -29.206215, 0.837945) pt3dadd(-181.57924, 30.0, -29.20652, 0.837945)}
    comp_6 {pt3dadd(-219.07924, 30.0, -29.205978, 0.837945)}
    comp_5 {pt3dclear() pt3dadd(-144.07996, 30.0, -29.206215, 0.837945) pt3dadd(-170.20625, 30.0, -56.10762, 0.837945)}
    comp_5 {pt3dadd(-196.3322, 30.0, -83.008194, 0.837945)}
    comp_59 {pt3dclear() pt3dadd(-19.470892, -146.053, 0.0, 1.0) pt3dadd(-29.206392, -169.08, 0.0, 1.0)}
    comp_59 {pt3dadd(-38.94189, -192.106, 0.0, 1.0)}
    comp_57 {pt3dclear() pt3dadd(19.470907, -146.053, 0.0, 1.0) pt3dadd(29.206408, -169.08, 0.0, 1.0)}
    comp_57 {pt3dadd(38.941807, -192.106, 0.0, 1.0)}
    comp_49 {pt3dclear() pt3dadd(58.412754, 30.0, 213.1596, 1.33333) pt3dadd(73.01627, 30.0, 247.69897, 1.33333)}
    comp_49 {pt3dadd(87.61939, 30.0, 282.23932, 1.33333)}
    comp_48 {pt3dclear() pt3dadd(-29.206297, 30.0, 219.07944, 0.837945) pt3dadd(-29.206469, 30.0, 256.5796, 0.837945)}
    comp_48 {pt3dadd(-29.20654, 30.0, 294.0798, 0.837945)}
    comp_47 {pt3dclear() pt3dadd(-83.00803, 30.0, 196.33243, 0.837945) pt3dadd(-109.909, 30.0, 222.45912, 0.837945)}
    comp_47 {pt3dadd(-136.80995, 30.0, 248.58582, 0.837945)}
    comp_36 {pt3dclear() pt3dadd(-58.41328, 30.0, -213.15915, 1.33333) pt3dadd(-73.01645, 30.0, -247.69923, 1.33333)}
    comp_36 {pt3dadd(-87.61997, 30.0, -282.23883, 1.33333)}
    comp_35 {pt3dclear() pt3dadd(29.2064, 30.0, -219.07906, 0.837945) pt3dadd(29.206581, 30.0, -256.5789, 0.837945)}
    comp_35 {pt3dadd(29.206764, 30.0, -294.07874, 0.837945)}
    comp_34 {pt3dclear() pt3dadd(83.008255, 30.0, -196.33209, 0.837945) pt3dadd(109.909424, 30.0, -222.45853, 0.837945)}
    comp_34 {pt3dadd(136.81061, 30.0, -248.58508, 0.837945)}
    comp_23 {pt3dclear() pt3dadd(213.15985, 30.0, -58.413044, 1.33333) pt3dadd(247.69913, 30.0, -73.01604, 1.33333)}
    comp_23 {pt3dadd(282.23932, 30.0, -87.61938, 1.33333)}
    comp_22 {pt3dclear() pt3dadd(219.07907, 30.0, 29.206625, 0.837945) pt3dadd(256.5799, 30.0, 29.20671, 0.837945)}
    comp_22 {pt3dadd(294.0797, 30.0, 29.206823, 0.837945)}
    comp_21 {pt3dclear() pt3dadd(196.33261, 30.001175, 83.00878, 0.837945) pt3dadd(222.4586, 30.001863, 109.909424, 0.837945)}
    comp_21 {pt3dadd(248.58505, 30.001787, 136.8104, 0.837945)}
    comp_10 {pt3dclear() pt3dadd(-213.15952, 30.0, 58.412918, 1.33333) pt3dadd(-247.69931, 30.0, 73.01611, 1.33333)}
    comp_10 {pt3dadd(-282.23907, 30.0, 87.6193, 1.33333)}
    comp_9 {pt3dclear() pt3dadd(-219.07924, 30.0, -29.205978, 0.837945) pt3dadd(-256.57977, 30.0, -29.206642, 0.837945)}
    comp_9 {pt3dadd(-294.0799, 30.0, -29.206383, 0.837945)}
    comp_8 {pt3dclear() pt3dadd(-196.3322, 30.0, -83.008194, 0.837945) pt3dadd(-222.45906, 30.0, -109.90842, 0.837945)}
    comp_8 {pt3dadd(-248.58539, 30.0, -136.80992, 0.837945)}
    comp_50 {pt3dclear() pt3dadd(-136.80995, 30.0, 248.58582, 0.837945) pt3dadd(-163.71089, 30.0, 274.7125, 0.837945)}
    comp_50 {pt3dadd(-190.61145, 30.0, 300.83826, 0.837945)}
    comp_37 {pt3dclear() pt3dadd(136.81061, 30.0, -248.58508, 0.837945) pt3dadd(163.71075, 30.0, -274.71155, 0.837945)}
    comp_37 {pt3dadd(190.61191, 30.0, -300.83807, 0.837945)}
    comp_24 {pt3dclear() pt3dadd(248.58505, 30.001787, 136.8104, 0.837945) pt3dadd(274.71106, 30.00246, 163.71103, 0.837945)}
    comp_24 {pt3dadd(300.83807, 30.002945, 190.61269, 0.837945)}
    comp_11 {pt3dclear() pt3dadd(-248.58539, 30.0, -136.80992, 0.837945) pt3dadd(-274.71222, 30.0, -163.71011, 0.837945)}
    comp_11 {pt3dadd(-300.83856, 30.0, -190.6116, 0.837945)}
    comp_51 {pt3dclear() pt3dadd(-190.61145, 30.0, 300.83826, 0.837945) pt3dadd(-217.51231, 30.0, 326.965, 0.837945)}
    comp_51 {pt3dadd(-244.41327, 30.0, 353.0917, 0.837945)}
    comp_38 {pt3dclear() pt3dadd(190.61191, 30.0, -300.83807, 0.837945) pt3dadd(217.51318, 30.0, -326.96368, 0.837945)}
    comp_38 {pt3dadd(244.41437, 30.0, -353.0902, 0.837945)}
    comp_25 {pt3dclear() pt3dadd(300.83807, 30.002945, 190.61269, 0.837945) pt3dadd(326.96402, 30.003649, 217.51332, 0.837945)}
    comp_25 {pt3dadd(353.0905, 30.003546, 244.4143, 0.837945)}
}

proc basic_shape_extra_1(){
    comp_12 {pt3dclear() pt3dadd(-300.83856, 30.0, -190.6116, 0.837945) pt3dadd(-326.96542, 30.0, -217.51178, 0.837945)}
    comp_12 {pt3dadd(-353.09177, 30.0, -244.41327, 0.837945)}
    comp_52 {pt3dclear() pt3dadd(-244.41327, 30.0, 353.0917, 0.837945) pt3dadd(-271.31393, 30.0, 379.21848, 0.837945)}
    comp_52 {pt3dadd(-298.21524, 30.0, 405.34393, 0.837945)}
    comp_39 {pt3dclear() pt3dadd(244.41437, 30.0, -353.0902, 0.837945) pt3dadd(271.3145, 30.0, -379.21667, 0.837945)}
    comp_39 {pt3dadd(298.2157, 30.0, -405.34326, 0.837945)}
    comp_26 {pt3dclear() pt3dadd(353.0905, 30.003546, 244.4143, 0.837945) pt3dadd(379.21698, 30.004847, 271.3156, 0.837945)}
    comp_26 {pt3dadd(405.34344, 30.004784, 298.21655, 0.837945)}
    comp_13 {pt3dclear() pt3dadd(-353.09177, 30.0, -244.41327, 0.837945) pt3dadd(-379.21768, 30.0, -271.31387, 0.837945)}
    comp_13 {pt3dadd(-405.34497, 30.0, -298.215, 0.837945)}
    comp_53 {pt3dclear() pt3dadd(-298.21524, 30.0, 405.34393, 0.837945) pt3dadd(-325.11603, 30.0, 431.47073, 0.837945)}
    comp_53 {pt3dadd(-352.01678, 30.0, 457.5975, 0.837945)}
    comp_40 {pt3dclear() pt3dadd(298.2157, 30.0, -405.34326, 0.837945) pt3dadd(325.11685, 30.0, -431.4698, 0.837945)}
    comp_40 {pt3dadd(352.01804, 30.0, -457.59634, 0.837945)}
    comp_27 {pt3dclear() pt3dadd(405.34344, 30.004784, 298.21655, 0.837945) pt3dadd(431.46942, 30.005459, 325.11725, 0.837945)}
    comp_27 {pt3dadd(457.59644, 30.005962, 352.01886, 0.837945)}
    comp_14 {pt3dclear() pt3dadd(-405.34497, 30.0, -298.215, 0.837945) pt3dadd(-431.4709, 30.0, -325.11557, 0.837945)}
    comp_14 {pt3dadd(-457.59814, 30.0, -352.01666, 0.837945)}
}

proc subsets() { local i

    all = new SectionList()
subsets_extra_0()
subsets_extra_1()
subsets_extra_2()
subsets_extra_3()
subsets_extra_4()
}

proc subsets_extra_0(){


    ModelViewParmSubset_4 = new SectionList()

    comp_1 ModelViewParmSubset_4.append()
    comp_41 ModelViewParmSubset_4.append()
    comp_28 ModelViewParmSubset_4.append()
    comp_15 ModelViewParmSubset_4.append()
    comp_2 ModelViewParmSubset_4.append()
    comp_43 ModelViewParmSubset_4.append()
    comp_42 ModelViewParmSubset_4.append()
    comp_30 ModelViewParmSubset_4.append()
    comp_29 ModelViewParmSubset_4.append()
    comp_17 ModelViewParmSubset_4.append()
    comp_16 ModelViewParmSubset_4.append()
    comp_4 ModelViewParmSubset_4.append()
    comp_3 ModelViewParmSubset_4.append()


    OneSecGrp_SectionRef_1 = new SectionList()

    comp_1 OneSecGrp_SectionRef_1.append()


    soma_group = new SectionList()

    comp_1 soma_group.append()


    soma_dends = new SectionList()

    comp_1 soma_dends.append()
    comp_41 soma_dends.append()
    comp_28 soma_dends.append()
    comp_15 soma_dends.append()
    comp_2 soma_dends.append()
    comp_43 soma_dends.append()
    comp_42 soma_dends.append()
    comp_30 soma_dends.append()
    comp_29 soma_dends.append()
    comp_17 soma_dends.append()
    comp_16 soma_dends.append()
    comp_4 soma_dends.append()
    comp_3 soma_dends.append()
    comp_46 soma_dends.append()
    comp_45 soma_dends.append()
    comp_44 soma_dends.append()
    comp_33 soma_dends.append()
    comp_32 soma_dends.append()
    comp_31 soma_dends.append()
    comp_20 soma_dends.append()
    comp_19 soma_dends.append()
    comp_18 soma_dends.append()
    comp_7 soma_dends.append()
    comp_6 soma_dends.append()
    comp_5 soma_dends.append()
    comp_49 soma_dends.append()
    comp_48 soma_dends.append()
    comp_47 soma_dends.append()
    comp_36 soma_dends.append()
    comp_35 soma_dends.append()
    comp_34 soma_dends.append()
    comp_23 soma_dends.append()
    comp_22 soma_dends.append()
    comp_21 soma_dends.append()
    comp_10 soma_dends.append()
    comp_9 soma_dends.append()
    comp_8 soma_dends.append()
    comp_50 soma_dends.append()
    comp_37 soma_dends.append()
    comp_24 soma_dends.append()
    comp_11 soma_dends.append()
    comp_51 soma_dends.append()
    comp_38 soma_dends.append()
    comp_25 soma_dends.append()
    comp_12 soma_dends.append()
    comp_52 soma_dends.append()
    comp_39 soma_dends.append()
    comp_26 soma_dends.append()
    comp_13 soma_dends.append()
    comp_53 soma_dends.append()
    comp_40 soma_dends.append()
    comp_27 soma_dends.append()
    comp_14 soma_dends.append()


    ModelViewParmSubset_6 = new SectionList()

    comp_54 ModelViewParmSubset_6.append()
    comp_55 ModelViewParmSubset_6.append()
    comp_58 ModelViewParmSubset_6.append()
    comp_56 ModelViewParmSubset_6.append()
    comp_46 ModelViewParmSubset_6.append()
    comp_45 ModelViewParmSubset_6.append()
    comp_44 ModelViewParmSubset_6.append()
    comp_33 ModelViewParmSubset_6.append()
    comp_32 ModelViewParmSubset_6.append()
    comp_31 ModelViewParmSubset_6.append()
    comp_20 ModelViewParmSubset_6.append()
    comp_19 ModelViewParmSubset_6.append()
    comp_18 ModelViewParmSubset_6.append()
    comp_7 ModelViewParmSubset_6.append()
    comp_6 ModelViewParmSubset_6.append()
    comp_5 ModelViewParmSubset_6.append()
    comp_59 ModelViewParmSubset_6.append()
    comp_57 ModelViewParmSubset_6.append()
    comp_49 ModelViewParmSubset_6.append()
    comp_48 ModelViewParmSubset_6.append()
    comp_47 ModelViewParmSubset_6.append()
    comp_36 ModelViewParmSubset_6.append()
}

proc subsets_extra_1(){
    comp_35 ModelViewParmSubset_6.append()
    comp_34 ModelViewParmSubset_6.append()
    comp_23 ModelViewParmSubset_6.append()
    comp_22 ModelViewParmSubset_6.append()
    comp_21 ModelViewParmSubset_6.append()
    comp_10 ModelViewParmSubset_6.append()
    comp_9 ModelViewParmSubset_6.append()
    comp_8 ModelViewParmSubset_6.append()
    comp_50 ModelViewParmSubset_6.append()
    comp_37 ModelViewParmSubset_6.append()
    comp_24 ModelViewParmSubset_6.append()
    comp_11 ModelViewParmSubset_6.append()
    comp_51 ModelViewParmSubset_6.append()
    comp_38 ModelViewParmSubset_6.append()
    comp_25 ModelViewParmSubset_6.append()
    comp_12 ModelViewParmSubset_6.append()
    comp_52 ModelViewParmSubset_6.append()
    comp_39 ModelViewParmSubset_6.append()
    comp_26 ModelViewParmSubset_6.append()
    comp_13 ModelViewParmSubset_6.append()
    comp_53 ModelViewParmSubset_6.append()
    comp_40 ModelViewParmSubset_6.append()
    comp_27 ModelViewParmSubset_6.append()
    comp_14 ModelViewParmSubset_6.append()


    axon_group = new SectionList()

    comp_54 axon_group.append()
    comp_55 axon_group.append()
    comp_58 axon_group.append()
    comp_56 axon_group.append()
    comp_59 axon_group.append()
    comp_57 axon_group.append()


    dendrite_group = new SectionList()

    comp_41 dendrite_group.append()
    comp_28 dendrite_group.append()
    comp_15 dendrite_group.append()
    comp_2 dendrite_group.append()
    comp_43 dendrite_group.append()
    comp_42 dendrite_group.append()
    comp_30 dendrite_group.append()
    comp_29 dendrite_group.append()
    comp_17 dendrite_group.append()
    comp_16 dendrite_group.append()
    comp_4 dendrite_group.append()
    comp_3 dendrite_group.append()
    comp_46 dendrite_group.append()
    comp_45 dendrite_group.append()
    comp_44 dendrite_group.append()
    comp_33 dendrite_group.append()
    comp_32 dendrite_group.append()
    comp_31 dendrite_group.append()
    comp_20 dendrite_group.append()
    comp_19 dendrite_group.append()
    comp_18 dendrite_group.append()
    comp_7 dendrite_group.append()
    comp_6 dendrite_group.append()
    comp_5 dendrite_group.append()
    comp_49 dendrite_group.append()
    comp_48 dendrite_group.append()
    comp_47 dendrite_group.append()
    comp_36 dendrite_group.append()
    comp_35 dendrite_group.append()
    comp_34 dendrite_group.append()
    comp_23 dendrite_group.append()
    comp_22 dendrite_group.append()
    comp_21 dendrite_group.append()
    comp_10 dendrite_group.append()
    comp_9 dendrite_group.append()
    comp_8 dendrite_group.append()
    comp_50 dendrite_group.append()
    comp_37 dendrite_group.append()
    comp_24 dendrite_group.append()
    comp_11 dendrite_group.append()
    comp_51 dendrite_group.append()
    comp_38 dendrite_group.append()
    comp_25 dendrite_group.append()
    comp_12 dendrite_group.append()
    comp_52 dendrite_group.append()
    comp_39 dendrite_group.append()
    comp_26 dendrite_group.append()
    comp_13 dendrite_group.append()
    comp_53 dendrite_group.append()
    comp_40 dendrite_group.append()
    comp_27 dendrite_group.append()
    comp_14 dendrite_group.append()


    ModelViewParmSubset_3 = new SectionList()

    comp_41 ModelViewParmSubset_3.append()
    comp_28 ModelViewParmSubset_3.append()
    comp_15 ModelViewParmSubset_3.append()
    comp_2 ModelViewParmSubset_3.append()
    comp_43 ModelViewParmSubset_3.append()
    comp_42 ModelViewParmSubset_3.append()
    comp_30 ModelViewParmSubset_3.append()
    comp_29 ModelViewParmSubset_3.append()
    comp_17 ModelViewParmSubset_3.append()
    comp_16 ModelViewParmSubset_3.append()
    comp_4 ModelViewParmSubset_3.append()
    comp_3 ModelViewParmSubset_3.append()
}

proc subsets_extra_2(){
    comp_46 ModelViewParmSubset_3.append()
    comp_45 ModelViewParmSubset_3.append()
    comp_44 ModelViewParmSubset_3.append()
    comp_33 ModelViewParmSubset_3.append()
    comp_32 ModelViewParmSubset_3.append()
    comp_31 ModelViewParmSubset_3.append()
    comp_20 ModelViewParmSubset_3.append()
    comp_19 ModelViewParmSubset_3.append()
    comp_18 ModelViewParmSubset_3.append()
    comp_7 ModelViewParmSubset_3.append()
    comp_6 ModelViewParmSubset_3.append()
    comp_5 ModelViewParmSubset_3.append()
    comp_49 ModelViewParmSubset_3.append()
    comp_48 ModelViewParmSubset_3.append()
    comp_47 ModelViewParmSubset_3.append()
    comp_36 ModelViewParmSubset_3.append()
    comp_35 ModelViewParmSubset_3.append()
    comp_34 ModelViewParmSubset_3.append()
    comp_23 ModelViewParmSubset_3.append()
    comp_22 ModelViewParmSubset_3.append()
    comp_21 ModelViewParmSubset_3.append()
    comp_10 ModelViewParmSubset_3.append()
    comp_9 ModelViewParmSubset_3.append()
    comp_8 ModelViewParmSubset_3.append()
    comp_50 ModelViewParmSubset_3.append()
    comp_37 ModelViewParmSubset_3.append()
    comp_24 ModelViewParmSubset_3.append()
    comp_11 ModelViewParmSubset_3.append()
    comp_51 ModelViewParmSubset_3.append()
    comp_38 ModelViewParmSubset_3.append()
    comp_25 ModelViewParmSubset_3.append()
    comp_12 ModelViewParmSubset_3.append()
    comp_52 ModelViewParmSubset_3.append()
    comp_39 ModelViewParmSubset_3.append()
    comp_26 ModelViewParmSubset_3.append()
    comp_13 ModelViewParmSubset_3.append()
    comp_53 ModelViewParmSubset_3.append()
    comp_40 ModelViewParmSubset_3.append()
    comp_27 ModelViewParmSubset_3.append()
    comp_14 ModelViewParmSubset_3.append()


    proximal_dends = new SectionList()

    comp_41 proximal_dends.append()
    comp_28 proximal_dends.append()
    comp_15 proximal_dends.append()
    comp_2 proximal_dends.append()
    comp_43 proximal_dends.append()
    comp_42 proximal_dends.append()
    comp_30 proximal_dends.append()
    comp_29 proximal_dends.append()
    comp_17 proximal_dends.append()
    comp_16 proximal_dends.append()
    comp_4 proximal_dends.append()
    comp_3 proximal_dends.append()


    ModelViewParmSubset_5 = new SectionList()

    comp_46 ModelViewParmSubset_5.append()
    comp_45 ModelViewParmSubset_5.append()
    comp_44 ModelViewParmSubset_5.append()
    comp_33 ModelViewParmSubset_5.append()
    comp_32 ModelViewParmSubset_5.append()
    comp_31 ModelViewParmSubset_5.append()
    comp_20 ModelViewParmSubset_5.append()
    comp_19 ModelViewParmSubset_5.append()
    comp_18 ModelViewParmSubset_5.append()
    comp_7 ModelViewParmSubset_5.append()
    comp_6 ModelViewParmSubset_5.append()
    comp_5 ModelViewParmSubset_5.append()
    comp_49 ModelViewParmSubset_5.append()
    comp_48 ModelViewParmSubset_5.append()
    comp_47 ModelViewParmSubset_5.append()
    comp_36 ModelViewParmSubset_5.append()
    comp_35 ModelViewParmSubset_5.append()
    comp_34 ModelViewParmSubset_5.append()
    comp_23 ModelViewParmSubset_5.append()
    comp_22 ModelViewParmSubset_5.append()
    comp_21 ModelViewParmSubset_5.append()
    comp_10 ModelViewParmSubset_5.append()
    comp_9 ModelViewParmSubset_5.append()
    comp_8 ModelViewParmSubset_5.append()
    comp_50 ModelViewParmSubset_5.append()
    comp_37 ModelViewParmSubset_5.append()
    comp_24 ModelViewParmSubset_5.append()
    comp_11 ModelViewParmSubset_5.append()
    comp_51 ModelViewParmSubset_5.append()
    comp_38 ModelViewParmSubset_5.append()
    comp_25 ModelViewParmSubset_5.append()
    comp_12 ModelViewParmSubset_5.append()
    comp_52 ModelViewParmSubset_5.append()
    comp_39 ModelViewParmSubset_5.append()
    comp_26 ModelViewParmSubset_5.append()
    comp_13 ModelViewParmSubset_5.append()
    comp_53 ModelViewParmSubset_5.append()
    comp_40 ModelViewParmSubset_5.append()
    comp_27 ModelViewParmSubset_5.append()
    comp_14 ModelViewParmSubset_5.append()


    distal_axon = new SectionList()

    comp_59 distal_axon.append()
    comp_57 distal_axon.append()
}

proc subsets_extra_3(){


    comp_1 all.append()
    comp_54 all.append()
    comp_41 all.append()
    comp_28 all.append()
    comp_15 all.append()
    comp_2 all.append()
    comp_55 all.append()
    comp_43 all.append()
    comp_42 all.append()
    comp_30 all.append()
    comp_29 all.append()
    comp_17 all.append()
    comp_16 all.append()
    comp_4 all.append()
    comp_3 all.append()
    comp_58 all.append()
    comp_56 all.append()
    comp_46 all.append()
    comp_45 all.append()
    comp_44 all.append()
    comp_33 all.append()
    comp_32 all.append()
    comp_31 all.append()
    comp_20 all.append()
    comp_19 all.append()
    comp_18 all.append()
    comp_7 all.append()
    comp_6 all.append()
    comp_5 all.append()
    comp_59 all.append()
    comp_57 all.append()
    comp_49 all.append()
    comp_48 all.append()
    comp_47 all.append()
    comp_36 all.append()
    comp_35 all.append()
    comp_34 all.append()
    comp_23 all.append()
    comp_22 all.append()
    comp_21 all.append()
    comp_10 all.append()
    comp_9 all.append()
    comp_8 all.append()
    comp_50 all.append()
    comp_37 all.append()
    comp_24 all.append()
    comp_11 all.append()
    comp_51 all.append()
    comp_38 all.append()
    comp_25 all.append()
    comp_12 all.append()
    comp_52 all.append()
    comp_39 all.append()
    comp_26 all.append()
    comp_13 all.append()
    comp_53 all.append()
    comp_40 all.append()
    comp_27 all.append()
    comp_14 all.append()
}

proc subsets_extra_4(){
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec soma_dends Ra = 250.0
    forsec axon_group Ra = 100.0

    forsec all {         insert k2  { gmax_k2 = 5.0E-4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_4 {         insert naf2  { gmax_naf2 = 0.06
    a_naf2 = 0.0
    b_naf2 = 0.0
    c_naf2 = 0.0
    d_naf2 = 0.0
    fastNa_shift_naf2 = 0.0 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_4 {         insert kdr_fs  { gmax_kdr_fs = 0.06 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_4 {         insert cat_a  { gmax_cat_a = 5.0E-5 }          ecat_a = 125.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_4 {         insert napf  { gmax_napf = 6.0E-4
    a_napf = 0.0
    b_napf = 0.0
    c_napf = 0.0
    d_napf = 0.0
    fastNa_shift_napf = 0.0 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_4 {         insert ka  { gmax_ka = 0.005 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec OneSecGrp_SectionRef_1 {         insert cad  {
    beta_cad = 0.02
    phi_cad = 10400.0 }
    }

    forsec soma_dends {         insert kc  { gmax_kc = 0.01 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_dends {         insert pas  { g_pas = 5.0E-5
    e_pas = -75.0 }    e_pas = -75.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_dends {         insert ar  { gmax_ar = 2.5E-5
    m0_ar = 0.0 }          ear = -40.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_dends {         insert cal  { gmax_cal = 5.0E-4 }          eca = 125.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_dends {         insert kahp_slower  { gmax_kahp_slower = 1.0E-4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec soma_dends {         insert km  { gmax_km = 5.0E-4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_6 {         insert ka  { gmax_ka = 0.001 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert kdr_fs  { gmax_kdr_fs = 0.4 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert naf2  { gmax_naf2 = 0.4
    a_naf2 = 0.0
    b_naf2 = 0.0
    c_naf2 = 0.0
    d_naf2 = 0.0
    fastNa_shift_naf2 = 0.0 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec axon_group {         insert pas  { g_pas = 0.001
    e_pas = -75.0 }    e_pas = -75.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_3 {         insert cad  {
    beta_cad = 0.05
    phi_cad = 260000.0 }
    }

    addChanMechs_0()  // Spliting function to prevent errors when proc too big
}

proc addChanMechs_0() {

    forsec ModelViewParmSubset_5 {         insert naf2  { gmax_naf2 = 0.01
    a_naf2 = 0.0
    b_naf2 = 0.0
    c_naf2 = 0.0
    d_naf2 = 0.0
    fastNa_shift_naf2 = 0.0 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_5 {         insert cat_a  { gmax_cat_a = 0.002 }          ecat_a = 125.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_5 {         insert kdr_fs  { gmax_kdr_fs = 0.01 }          ek = -95.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_5 {         insert napf  { gmax_napf = 1.0E-4
    a_napf = 0.0
    b_napf = 0.0
    c_napf = 0.0
    d_napf = 0.0
    fastNa_shift_napf = 0.0 }          ena = 50.0  // note: this is val from ChannelML, may be reset later

    }

    forsec ModelViewParmSubset_3 {
        cai = 0.01
        cao = 2.0
    }

    forsec OneSecGrp_SectionRef_1 {
        cai = 0.01
        cao = 2.0
    }

    forsec all { ek = -100.0}

    forsec all { ena = 50.0}

}

proc geom_nseg() {
    comp_1 nseg = 2
    comp_54 nseg = 25
    comp_41 nseg = 12
    comp_28 nseg = 12
    comp_15 nseg = 12
    comp_2 nseg = 12
    comp_55 nseg = 27
    comp_43 nseg = 15
    comp_42 nseg = 15
    comp_30 nseg = 15
    comp_29 nseg = 15
    comp_17 nseg = 15
    comp_16 nseg = 15
    comp_4 nseg = 15
    comp_3 nseg = 15
    comp_58 nseg = 32
    comp_56 nseg = 32
    comp_46 nseg = 15
    comp_45 nseg = 19
    comp_44 nseg = 19
    comp_33 nseg = 15
    comp_32 nseg = 19
    comp_31 nseg = 19
    comp_20 nseg = 15
    comp_19 nseg = 19
    comp_18 nseg = 19
    comp_7 nseg = 15
    comp_6 nseg = 19
    comp_5 nseg = 19
    comp_59 nseg = 32
    comp_57 nseg = 32
    comp_49 nseg = 15
    comp_48 nseg = 19
    comp_47 nseg = 19
    comp_36 nseg = 15
    comp_35 nseg = 19
    comp_34 nseg = 19
    comp_23 nseg = 15
    comp_22 nseg = 19
    comp_21 nseg = 19
    comp_10 nseg = 15
    comp_9 nseg = 19
    comp_8 nseg = 19
    comp_50 nseg = 19
    comp_37 nseg = 19
    comp_24 nseg = 19
    comp_11 nseg = 19
    comp_51 nseg = 19
    comp_38 nseg = 19
    comp_25 nseg = 19
    comp_12 nseg = 19
    comp_52 nseg = 19
    comp_39 nseg = 19
    comp_26 nseg = 19
    comp_13 nseg = 19
    comp_53 nseg = 19
    comp_40 nseg = 19
    comp_27 nseg = 19
    comp_14 nseg = 19
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon

    comp_1 $o2 = new NetCon(&v(1), $o1)
}

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay
    print " "
    }



    print "--------  "
    print " "
}


endtemplate nRT
